<div class="container py-5">
    <h1 class="mb-4">Shopping Cart</h1>
    
    <% if (cart && cart.items && cart.items.length > 0) { %>
        <div class="table-responsive mb-4">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Price</th>
                        <th>Quantity</th>
                        <th>Total</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% cart.items.forEach(item => { %>
                        <tr>
                            <td>
                                <div class="d-flex align-items-center">
                                    <img src="<%= item.product.imageUrl %>" alt="<%= item.product.name %>" class="cart-img me-3">
                                    <div>
                                        <h6 class="mb-1"><%= item.product.name %></h6>
                                        <small class="text-muted">
                                            <% if (item.size) { %>Size: <%= item.size %><% } %>
                                            <% if (item.color) { %><%= item.size ? ' | ' : '' %>Color: <%= item.color %><% } %>
                                        </small>
                                    </div>
                                </div>
                            </td>
                            <td>$<%= item.product.price.toFixed(2) %></td>
                            <td>
                                <div class="quantity-selector">
                                    <button class="btn btn-sm btn-outline-secondary quantity-btn" data-action="decrease" data-product-id="<%= item.product._id %>">-</button>
                                    <input type="number" class="form-control quantity-input" value="<%= item.quantity %>" min="1" max="10" data-product-id="<%= item.product._id %>">
                                    <button class="btn btn-sm btn-outline-secondary quantity-btn" data-action="increase" data-product-id="<%= item.product._id %>">+</button>
                                </div>
                            </td>
                            <td>$<%= (item.product.price * item.quantity).toFixed(2) %></td>
                            <td>
                                <button class="btn btn-sm btn-danger remove-item-btn" data-product-id="<%= item.product._id %>">
                                    <i class="fas fa-trash"></i> Remove
                                </button>
                            </td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>
        
        <div class="row">
            <div class="col-md-6">
                <div class="card mb-4">
                    <div class="card-body">
                        <h5 class="card-title">Order Summary</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Subtotal:</span>
                            <span>$<%= cart.total.toFixed(2) %></span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Shipping:</span>
                            <span><%= cart.total >= 50 ? 'Free' : '$5.00' %></span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Tax (5%):</span>
                            <span>$<%= (cart.total * 0.05).toFixed(2) %></span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between fw-bold">
                            <span>Total:</span>
                            <span>$<%= (cart.total + (cart.total >= 50 ? 0 : 5) + (cart.total * 0.05)).toFixed(2) %></span>
                        </div>
                    </div>
                </div>
                
                <div class="d-flex gap-2">
                    <a href="/products" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-2"></i> Continue Shopping
                    </a>
                    <button class="btn btn-outline-danger clear-cart-btn">
                        <i class="fas fa-trash me-2"></i> Clear Cart
                    </button>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Proceed to Checkout</h5>
                        <p class="mb-3">Ready to complete your purchase? Click the button below to proceed to checkout.</p>
                        <a href="/checkout" class="btn btn-primary btn-lg w-100">
                            <i class="fas fa-lock me-2"></i> Proceed to Checkout
                        </a>
                    </div>
                </div>
            </div>
        </div>
        
    <% } else { %>
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-shopping-cart fa-5x text-muted"></i>
            </div>
            <h3 class="mb-3">Your cart is empty</h3>
            <p class="text-muted mb-4">Looks like you haven't added any items to your cart yet.</p>
            <a href="/products" class="btn btn-primary btn-lg">
                <i class="fas fa-shopping-bag me-2"></i> Start Shopping
            </a>
        </div>
    <% } %>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Quantity buttons functionality
        const quantityBtns = document.querySelectorAll('.quantity-btn');
        quantityBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                const action = this.getAttribute('data-action');
                const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                let currentValue = parseInt(input.value);
                
                if (action === 'decrease' && currentValue > 1) {
                    input.value = currentValue - 1;
                    updateQuantity(productId, currentValue - 1);
                } else if (action === 'increase' && currentValue < 10) {
                    input.value = currentValue + 1;
                    updateQuantity(productId, currentValue + 1);
                }
            });
        });
        
        // Quantity input change functionality
        const quantityInputs = document.querySelectorAll('.quantity-input');
        quantityInputs.forEach(input => {
            input.addEventListener('change', function() {
                const productId = this.getAttribute('data-product-id');
                const newValue = parseInt(this.value);
                
                if (newValue >= 1 && newValue <= 10) {
                    updateQuantity(productId, newValue);
                } else {
                    // Reset to valid value
                    this.value = newValue < 1 ? 1 : 10;
                    updateQuantity(productId, this.value);
                }
            });
        });
        
        // Remove item functionality
        const removeItemBtns = document.querySelectorAll('.remove-item-btn');
        removeItemBtns.forEach(btn => {
            btn.addEventListener('click', function() {
                const productId = this.getAttribute('data-product-id');
                
                if (confirm('Are you sure you want to remove this item from your cart?')) {
                    removeItem(productId);
                }
            });
        });
        
        // Clear cart functionality
        const clearCartBtn = document.querySelector('.clear-cart-btn');
        if (clearCartBtn) {
            clearCartBtn.addEventListener('click', function() {
                if (confirm('Are you sure you want to clear your entire cart?')) {
                    clearCart();
                }
            });
        }
        
        // Update quantity function
        function updateQuantity(productId, quantity) {
            fetch('/cart/update', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId,
                    quantity
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error updating cart. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error updating cart. Please try again.');
            });
        }
        
        // Remove item function
        function removeItem(productId) {
            fetch(`/cart/remove/${productId}`, {
                method: 'DELETE',
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error removing item. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error removing item. Please try again.');
            });
        }
        
        // Clear cart function
        function clearCart() {
            fetch('/cart/clear', {
                method: 'DELETE',
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    alert('Error clearing cart. Please try again.');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error clearing cart. Please try again.');
            });
        }
    });
</script>
